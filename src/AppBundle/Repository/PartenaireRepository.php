<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * PartenaireRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PartenaireRepository extends EntityRepository
{
    public function findDemandeByPartenaire($id, $offset, $limit)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('d')
            ->from('AppBundle:Partenaire', 'p')
            ->join('p.moderateurs', 'm')
            ->join('AppBundle:Demande', 'd', 'WITH', 'd.moderateur = m.nom');
        if($id != null)
            $qb->where('p.id = :id');
        if($offset != null)
            $qb->setFirstResult( $offset );
        if($limit != null)
            $qb->setMaxResults( $limit );
        if($id != null)
            $qb->setParameter('id', $id);
        return $qb->getQuery()->getResult();
    }

    public function findDemandeByDateAndByPartenaire($id, $date)
    {
        $p = $this->getEntityManager()->getRepository('AppBundle:Partenaire')->find($id);
        $moderateurs = array();
        foreach($p->getModerateurs() as $m)
        {
            array_push($moderateurs, $m->getNom());
        }
        var_export($moderateurs);
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('count(d)')
            ->from('AppBundle:Demande', 'd')
            ->where('d.moderateur in (:moderateurs)')
            ->andWhere('d.date_reception >= :date_r')
            ->setParameter('date_r', $date)
            ->setParameter('moderateurs', $moderateurs);
        return $qb->getQuery()->getSingleScalarResult();
    }
}
